package quizFriend;

public class AddressBook {
	public static void main(String[] args) {
		Menu menu = new Menu();

		menu.displayMenu();
	}
}

//Quiz 11
//대학교 친구(class Student{}) 5명과 회사원 친구(class BusinessFriend{}) 5명의 정보를,
//각각 키보드로 부터 입력 받아, 친구 정보를 배열로 관리하는 프로그램을 작성해보시고,
//이름 정보를 입력 받아 세부 정보를 출력하는 기능도 구현해보세요.

//Quiz 12
//중학교 친구 정보 : 이름/폰번호/주소/결혼여부의 정보를 관리할 자료형을 추가하고,
//키보드로부터 입력 받아 저장하고, 사용자의 요청시 데이터를 출력하는 기능을 구현하세요.

//Quiz 14
//친구 주소록 관리 프로그램에서 중/고등/대학교 친구 데이터 저장시
//중복 데이터는 체크를 하지 않고 저장하고 있습니다.
//폰번호의 중복 여부를 체크해서 중복 데이터는 저장되지 않도록 기능을 수정하세요.

//Quiz 15
//폰번호를 입력 받아, 데이터 삭제 기능도 추가해 보세요.
//
//***** 메뉴 선택 *****
//0. 프로그램 종료.
//1. 중학교 친구 정보 입력.
//2. 고교 친구 정보 입력.
//3. 대학교 친구 정보 입력.
//
//4. 친구 전체 정보 출력.
//5. 친구 기본 정보 출력.
//6. 중학교 친구 정보 출력.
//7. 고등학교 친구 정보 출력. 
//8. 대학교 친구 정보 출력.
//
//9. 검색 기능(폰번호 전달받아 기능 구현).
//10. 데이터 삭제 기능(폰번호 전달받아 기능 구현).

//Quiz 16
//키보드로부터 이름을 입력 받아 데이터를 저장할 때, 한글자의 이름이 입력되면
//"한 글자의 이름은 입력하실 수 없습니다."의 예외 문장을 출력하는 프로그램을
//예외처리 문법을 이용하여 구현하여 1, 2, 3번의 기능을 업데이트 하세요.

//Quiz 17
//1,2,3,9,10번 항목의 메뉴 구현 시,
//데이터 중복 및 검색의 기능에 String 자료형의 compareTo() 메서드를 이용했다면
//equals() 메서드를 이용하도록 기능을 수정해 보세요.

//Quiz 18
//아래의 기능을 컬렉션 프레임워크를 이용하여 수정하세요.
//(단, 데이터 중복은 허용되지 않고, 정렬할 필요는 없습니다)

//Quiz 19
//입력 받은 데이터를 파일에 저장해, 프로그램이 종료된 후,
//다시 실행이 되었을 때, 데이터를 계속 사용할 수 있도록 프로그램을 완성해보세요.